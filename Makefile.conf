# Adapt to your system or different libc implementation
## Example config for a current arch (based) linux
HOST_LDFL_GCC_LIBS = -L/usr/lib/gcc/arm-none-eabi/13.1.0/
HOST_CPFL_CPP_INC = -I/usr/arm-none-eabi/include/c++/13.1.0/ -I/usr/arm-none-eabi/include/c++/13.1.0/arm-none-eabi/
HOST_CPFL_LIBCPP_INC = -I/usr/include/c++/v1/
HOST_CXFL_GCC_SYSINC = -I/usr/arm-none-eabi/include/
HOST_LDFL_C_LIBS = -L/usr/arm-none-eabi/lib/
### Only for reference (automatically set when not setting -nostdinc)
#HOST_CXFL_GCC_INC = -I/usr/lib/clang/15.0.7/include/
#HOST_CXFL_GCC_INC = -I/usr/lib/gcc/arm-none-eabi/13.1.0/include/

## Example config for debian (based) systems
#HOST_LDFL_GCC_LIBS = -L/usr/lib/gcc/arm-none-eabi/12.2.1/
#HOST_CPFL_CPP_INC = -I/usr/include/newlib/c++/12.2.1/ -I/usr/include/newlib/c++/12.2.1/arm-none-eabi/
#HOST_CPFL_LIBCPP_INC = -I/usr/lib/llvm-14/include/c++/v1/
#HOST_CXFL_GCC_SYSINC = -I/usr/include/newlib/
#HOST_LDFL_C_LIBS = -L/usr/lib/arm-none-eabi/newlib/
### Only for reference (automatically set when not setting -nostdinc)
#HOST_CXFL_GCC_INC = -I/usr/include/newlib/

#USE_DKP=1
#USE_GCC_SYSROOT=1
#USE_LIBC=0
#USE_LIBGCC=0
#USE_AGBABI=1
#Using libcpp only works with clang
#USE_LIBCPP=1
